name: Healthcare App CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install Dependencies
        run: |
          cd frontend/web-app
          npm ci
          cd ../../services/appointment-service
          npm ci
          
      - name: Run Tests
        run: |
          cd frontend/web-app
          npm test
          cd ../../services/appointment-service
          npm test
          
      - name: Run Linting
        run: |
          cd frontend/web-app
          npm run lint
          cd ../../services/appointment-service
          npm run lint

  security-scan:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high
          
      - name: Run OWASP Dependency Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'Healthcare App'
          path: '.'
          format: 'HTML'
          out: 'reports'

  build:
    needs: [test, security-scan]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Build and Push Frontend
        uses: docker/build-push-action@v4
        with:
          context: ./frontend/web-app
          push: true
          tags: your-org/healthcare-frontend:latest
          
      - name: Build and Push Backend
        uses: docker/build-push-action@v4
        with:
          context: ./services/appointment-service
          push: true
          tags: your-org/healthcare-backend:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          
      - name: Update ECS service
        run: |
          aws ecs update-service --cluster healthcare-cluster --service frontend-service --force-new-deployment
          aws ecs update-service --cluster healthcare-cluster --service backend-service --force-new-deployment
          
      - name: Run Database Migrations
        run: |
          aws ecs run-task --cluster healthcare-cluster --task-definition migration-task --network-configuration "awsvpcConfiguration={subnets=[${{ secrets.SUBNET_ID }}],securityGroups=[${{ secrets.SECURITY_GROUP_ID }}]}"

  notify:
    needs: deploy
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Notify Slack
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always() 